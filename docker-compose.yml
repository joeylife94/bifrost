version: '3.8'

services:
  # Bifrost API 서버
  api:
    build: .
    container_name: bifrost-api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://bifrost:bifrost123@postgres:5432/bifrost
      - BIFROST_OLLAMA_URL=http://ollama:11434
      - PYTHONUNBUFFERED=1
    volumes:
      - ./bifrost:/app/bifrost
      - ./data:/app/data
    depends_on:
      - postgres
      - redis
    networks:
      - bifrost-network
    restart: unless-stopped

  # PostgreSQL
  postgres:
    image: postgres:16-alpine
    container_name: bifrost-postgres
    environment:
      - POSTGRES_USER=bifrost
      - POSTGRES_PASSWORD=bifrost123
      - POSTGRES_DB=bifrost
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - bifrost-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bifrost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (캐시 & 큐)
  redis:
    image: redis:7-alpine
    container_name: bifrost-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - bifrost-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Ollama (로컬 LLM)
  ollama:
    image: ollama/ollama:latest
    container_name: bifrost-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama-data:/root/.ollama
    networks:
      - bifrost-network
    restart: unless-stopped
    # GPU 지원 (선택)
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]

  # Prometheus (메트릭 수집)
  prometheus:
    image: prom/prometheus:latest
    container_name: bifrost-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - bifrost-network
    restart: unless-stopped

  # Grafana (대시보드)
  grafana:
    image: grafana/grafana:latest
    container_name: bifrost-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./monitoring/grafana:/etc/grafana/provisioning
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - bifrost-network
    restart: unless-stopped

volumes:
  postgres-data:
  redis-data:
  ollama-data:
  prometheus-data:
  grafana-data:

networks:
  bifrost-network:
    driver: bridge
